scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    getMemoTests: [MemoTest!]! @all
    getMemoTestById(id: ID! @eq): MemoTest @find
    getSessionById(id: ID! @eq): GameSession @find
}

type Mutation {
    createMemoTest(name: String!, images: [String!]!): MemoTest
    removeImageFromMemoTestById(id: ID!, imageId: Int!): MemoTest
    createGameSession(gameId: Int!): GameSession
    completeSession(id: Int!): GameSession
    updateProgress(id: Int!, flipped: Boolean!, selected: Boolean!): GameSession
}

type MemoTest {
    id: ID!
    name: String!
    email: String!
    images: [Image!]! @hasMany
    active_game_session: GameSession
    created_at: DateTime!
    updated_at: DateTime!
    highest_score: Int
}

type Image {
    id: ID!
    url: String!
    created_at: DateTime!
    updated_at: DateTime!
}

enum GameSessionStatus {
    STARTED
    COMPLETED
}

type GameSession {
    id: ID!
    retries: Int!
    memo_test_id: Int!
    number_of_pairs: Int!
    score: Int
    state: GameSessionStatus!
    cardsGameSession: [CardGameSession!]!
    created_at: DateTime!
    updated_at: DateTime!
}

type CardGameSession {
    id: ID!
    image: Image!
    selected: Boolean!
    flipped: Boolean!
    created_at: DateTime!
    updated_at: DateTime!
}
